# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi


source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#################################
# Config                       
#################################

## NVM
export NVM_DIR=~/.nvm
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

## Pyenv 

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"

# pnpm
export PNPM_HOME="/Users/pit/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end


#################################
# Aliases                       
#################################

alias docker-clean-images="docker rmi $(docker images -a --filter=dangling=true -q)"
alias docker-clean-ps="docker rm $(docker ps --filter=status=exited --filter=status=created -q)"
alias docker-clean-all="docker kill $(docker ps -q);docker_clean_ps;docker rmi $(docker images -a -q)"
alias vscode="codium"
alias openzs="open ~/.zshrc"
alias sourcezs="source ~/.zshrc"
alias p="python3"
alias home="cd $HOME"
alias goserver="$HOME/.goserver/main"
alias k="kubectl"
alias mk="minikube"
alias mount-data="sudo cryptsetup luksOpen /dev/sda5 data && sudo mount /dev/mapper/data /home/eduardo/data/"
alias convert-png-to-jpg="mogrify -format jpg *.png"

#################################
# Variables
#################################

export PATH="$PATH:/usr/local/go/bin"
export FLYCTL_INSTALL="/home/eduardo/.fly"
export PATH="$FLYCTL_INSTALL/bin:$PATH"
export GOPATH="$HOME/go"
export PATH="$PATH:$GOPATH/bin"
export DENO_INSTALL="/home/eduardo/.deno"
export PATH="$DENO_INSTALL/bin:$PATH"
export PATH="/home/eduardo/.codon/bin:$PATH"
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin $PATH"

#################################
# param alias 
#################################

clean-audio() {
    ffmpeg -i $1 -af "highpass=f=200, lowpass=f=3000" $2
}

square-image() {
    convert $1 -resize 1420x1080 -background black -gravity center -extent 1420x1420 $2
}

subtitle() {
    ffmpeg $1 -vf "subtitles=$2" $3
}

resize-to() {
    mogrify -resize $1x *.*
}
source '/home/eduardo/.nvm/versions/node/v18.17.0/lib/node_modules/@hyperupcall/autoenv/activate.sh'
source '/home/eduardo/.nvm/versions/node/v18.17.0/lib/node_modules/@hyperupcall/autoenv/activate.sh'

#################################
# plugins                       
#################################

source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

plugins=(
    autoenv
    colorize
    python
    pyenv
    pyenv-virtualenv
    zsh-syntax-highlighting
    zsh-interactive-cd
    zsh-autosuggestions
    )

eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# bun completions
[ -s "/home/eduardo/.bun/_bun" ] && source "/home/eduardo/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
